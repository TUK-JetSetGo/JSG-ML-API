name: Deploy to EC2 via ECR

on:
  push:
    branches: ["feat/#12-cicd"]

env:
  AWS_REGION: ap-northeast-2
  IMAGE_TAG: latest
  ECR_ACCOUNT_ID: 905418480679
  ECR_REPOSITORY: jsg-ml
  ECR_REGISTRY: 905418480679.dkr.ecr.ap-northeast-2.amazonaws.com
  IMAGE_URI: 905418480679.dkr.ecr.ap-northeast-2.amazonaws.com/jsg-ml:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI
          docker push $IMAGE_URI

      - name: SSH and deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            export AWS_REGION=${AWS_REGION}
            export ECR_REGISTRY=${ECR_REGISTRY}
            export IMAGE_URI=${IMAGE_URI}

            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $IMAGE_URI
            docker rm -f jsg-ml-running || true
            docker run -d -p 8000:8000 --name jsg-ml-running $IMAGE_URI